----------------------------------------------------------------------------
EXAMPLE ENVIRONMENT CONFIGURATION FOR THE NODE-IDENTITY-SERVICE
----------------------------------------------------------------------------
Copy this file to .env and fill in your actual, secret values.
Do NOT commit the real .env file to version control.
--- Server Configuration ---
ISSUER="http://localhost"
The port the service will listen on. Defaults to 3000 if not set.
PORT=3000

--- Security & Session Secrets ---
IMPORTANT: For production, generate secure, random strings for these values.
You can use openssl rand -hex 32 to generate a strong secret.
SESSION_SECRET="a-very-secret-key-for-dev"
JWT_SECRET="a-different-very-secret-key-for-dev"
INTERNAL_API_KEY="your-secure-api-key-for-service-to-service-communication"

--- JWT Configuration ---
The 'audience' claim for the JWTs issued by this service. This should
identify the group of services that are intended to accept these tokens.
JWT_AUDIENCE="action-intention-services"

--- Google Cloud & OAuth 2.0 Configuration ---
The ID of your Google Cloud project where the Firestore database lives.
GCP_PROJECT_ID="your-gcp-project-id"

Your application's OAuth 2.0 credentials from the Google Cloud Console.
GOOGLE_CLIENT_ID="https://www.google.com/search?q=your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

--- Node Environment ---
Set this to "production" in your production deployment environment to enable
security checks, such as verifying that default secrets are not being used.
For local development, this can be left commented out or set to "development".
NODE_ENV=development